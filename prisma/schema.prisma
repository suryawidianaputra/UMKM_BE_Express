// Prisma schema file
// Learn more at: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  username    String
  email       String    @unique
  password    String
  profilePic  String?
  phoneNumber String?   @unique
  zipCode     String?
  longitude   Float?
  latitude    Float?
  dateOfBirth DateTime?
  gender      String?
  role        String    @default("customer")
  isDeleted   Boolean?  @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  carts       Cart[]
  comments    Comment[]
  stores      Store[]       @relation("StoreOwner")
  address     UserAddress[]
  Transaction Transaction[]
}

model UserAddress {
  id        String   @id @default(uuid())
  userId    String
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User User? @relation(fields: [userId], references: [id])
}

model Store {
  id               String    @id @default(uuid())
  userId           String    @unique
  storeName        String    @unique
  storePicture     String
  storeDescription String?
  isActive         Boolean   @default(false)
  isDeleted        Boolean?  @default(false)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  user             User      @relation(fields: [userId], references: [id], name: "StoreOwner")
  products         Product[]
}

model Product {
  id          String   @id @default(uuid())
  storeId     String
  name        String
  description String
  discount    Int      @default(0)
  isDeleted   Boolean? @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  store       Store            @relation(fields: [storeId], references: [id])
  carts       Cart[]
  comments    Comment[]
  variants    ProductVariant[]
  Transaction Transaction[]
}

model ProductVariant {
  id                 String   @id @default(uuid())
  productId          String
  productVariantName String
  productPrice       Int
  productStock       Int
  productSoldout     Int      @default(0)
  isDeleted          Boolean? @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  product     Product        @relation(fields: [productId], references: [id])
  images      ProductImage[]
  Cart        Cart[]
  Transaction Transaction[]
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  variantId String
  imageUrl  String
  isDeleted Boolean? @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  variant ProductVariant @relation(fields: [variantId], references: [id])
}

model Cart {
  id        Int      @id @default(autoincrement())
  productId String
  variantId String
  userId    String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User           @relation(fields: [userId], references: [id])
  product Product        @relation(fields: [productId], references: [id])
  variant ProductVariant @relation(fields: [variantId], references: [id])

  @@unique([productId, userId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  userId    String
  productId String
  content   String
  isDeleted Boolean? @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User           @relation(fields: [userId], references: [id])
  product Product        @relation(fields: [productId], references: [id])
  images  CommentImage[]
}

model CommentImage {
  id        Int      @id @default(autoincrement())
  commentId Int
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  comment Comment @relation(fields: [commentId], references: [id])
}

model Transaction {
  id              String @id @default(uuid())
  userId          String
  productId       String
  variantId       String
  productQuantity Int
  totalAmount     Int
  status          String
  shipingStatus   String @default("Dikemas")
  resi            String

  product   Product        @relation(fields: [productId], references: [id])
  variant   ProductVariant @relation(fields: [variantId], references: [id])
  user      User           @relation(fields: [userId], references: [id])
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}
